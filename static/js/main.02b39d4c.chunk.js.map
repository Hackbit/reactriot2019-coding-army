{"version":3,"sources":["images/logo.png","components/Nav.jsx","components/MaleCartoon.jsx","components/FemaleCartoon.jsx","components/Bubble.jsx","components/Output.jsx","components/Form.jsx","components/LetsPlay.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","href","target","Component","MaleCartoon","FemaleCartoon","Bubble","props","name","place","Output","userName","rel","gender","color","PlacesOptions","handleSubmit","event","setState","value","console","log","state","this","onChange","required","React","GenderOptions","updateGender","selectedOption","type","checked","NameForm","placeholder","ReactDOM","render","document","getElementById","Form","shown","toggleShown","e","updateColor","onSubmit","src","logo","alt","width","height","style","LetsPlay","onClick","App","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02b39d4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9ad61bba.png\";","import React, { Component } from 'react';\r\nimport './Nav.css';\r\n\r\n\r\n\r\nexport default class Nav extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <header>\r\n                    <nav className=\"homepg-nav\">\r\n                        <ul className=\"list-container\">\r\n\r\n                            <a className=\"link\" href=\"https://hackbit.github.io/reactriot2019-coding-army/.\"><i className=\"fas fa-home\"></i> Home</a>\r\n                            <a className=\"link\" href=\"https://www.reactriot.com/entries/74-coding-army/vote\"><i className=\"fas fa-check-circle\"></i> Vote for us</a>\r\n                            <a className=\"link\" href=\"https://www.reactriot.com/entries/74-coding-army/vote\"><i className=\"fas fa-thumbs-up\"></i> Like our repo</a>\r\n                            <a className=\"link\"\r\n                                href=\"https://github.com/reenaishtiaq\" target=\"_blank\"><i className=\"fas fa-users\"></i> Follow us</a></ul>\r\n                    </nav>\r\n\r\n                </header>\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './MaleCartoon.css'\r\n\r\nexport default function MaleCartoon() {\r\n  return (\r\n    <div className=\"boy\">\r\n      <div className=\"head\">\r\n        <div className=\"hair\">\r\n          <div className=\"triangle left\"></div>\r\n          <div className=\"triangle center\"></div>\r\n          <div className=\"triangle right\"></div>\r\n        </div>\r\n        <div className=\"face\">\r\n          <div className=\"content\">\r\n            <div className=\"left eye\"></div>\r\n            <div className=\"right eye\"></div>\r\n            <div className=\"dot right\"></div>\r\n            <div className=\"dot left\"></div>\r\n            <div className=\"nose\"></div>\r\n            <div className=\"ear left\"></div>\r\n            <div className=\"ear right\"></div>\r\n            <div className=\"mouse\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"torso\"></div>\r\n      <div className=\"hand left\"></div>\r\n      <div className=\"hand right\"></div>\r\n      <div className=\"hip\"></div>\r\n      <div className=\"legs\">\r\n        <div className=\"leg left\"></div>\r\n        <div className=\"leg right\"></div>\r\n      </div>\r\n      <div className=\"feet\"></div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './FemaleCartoon.css'\r\n\r\nexport default function FemaleCartoon() {\r\n  return (\r\n    <div>\r\n      <div className=\"girl\">\r\n        <div className=\"head\">\r\n          <div className=\"hair\">\r\n            <div className=\"triangle left\"></div>\r\n            <div className=\"triangle center\"></div>\r\n            <div className=\"triangle right\"></div>\r\n          </div>\r\n          <div className=\"badge-ribbon\"></div>\r\n          <div className=\"face\">\r\n            <div className=\"content\">\r\n              <div className=\"left eye\"></div>\r\n              <div className=\"right eye\"></div>\r\n              <div className=\"dot right\"></div>\r\n              <div className=\"dot left\"></div>\r\n              <div className=\"nose\"></div>\r\n              <div className=\"ear left\"></div>\r\n              <div className=\"ear right\"></div>\r\n              <div className=\"mouse\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"torso\"></div>\r\n        <div className=\"frok\"></div>\r\n        <div className=\"hand left\"></div>\r\n        <div className=\"hand right\"></div>\r\n        <div className=\"legs\">\r\n          <div className=\"leg left\"></div>\r\n          <div className=\"leg right\"></div>\r\n        </div>\r\n        <div className=\"feet\"></div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import './Bubble.css'\r\n\r\nimport React from 'react'\r\n\r\n\r\nexport default function Bubble(props) {\r\n  return (\r\n    <div className=\"speech-bubble\">\r\n      <h1>Hi! I'm {props.name}. I'm enjoying my summer at my Favorite place {props.place}. </h1>\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable no-unreachable */\r\n/* eslint-disable no-lone-blocks */\r\nimport React from 'react'\r\nimport MaleCartoon from './MaleCartoon';\r\nimport FemaleCartoon from './FemaleCartoon';\r\nimport Bubble from './Bubble';\r\nimport './Output.css';\r\n\r\n\r\nexport default function Output(props) {\r\n  return (\r\n    <div className=\"output\">\r\n      <Bubble name={props.userName} place={props.place} />\r\n      <a href=\"https://www.reactriot.com/entries/74-coding-army/vote\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <button className=\"hackbit-vote-widget\">Vote for Us!!</button>\r\n      </a>\r\n      {props.gender === \"Male\" ? <MaleCartoon /> : <FemaleCartoon />}\r\n    </div >\r\n  )\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Output from './Output';\r\nimport logo from '../images/logo.png';\r\nimport ReactDOM from 'react-dom';\r\nimport './Form.css';\r\n\r\n\r\n\r\nvar userName = \"\";\r\nvar place = \"\";\r\nvar gender = \"\";\r\nvar color = \"\";\r\n\r\nclass PlacesOptions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: 'Mountain' };\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        }, () => {\r\n            console.log(this.state.value);\r\n            place = this.state.value;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <label className=\"place\">\r\n                    Which is your favorite Place\r\n                      <select value={this.state.value} onChange={this.handleSubmit} required>\r\n                        <option value=\"Mountain\">Mountain</option>\r\n                        <option value=\"Beach\">Beach</option>\r\n                        <option value=\"Desert\">Desert</option>\r\n                        <option value=\"Valley\">Valley</option>\r\n                    </select>\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nclass GenderOptions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedOption: \"\"\r\n        };\r\n    }\r\n    updateGender = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            selectedOption: event.target.value\r\n        });\r\n        gender = event.target.value\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label className=\"gender\">Choose your Gender </label>\r\n                <label>\r\n                    <input type=\"radio\" name=\"gender\"\r\n                        value=\"Male\"\r\n                        checked={this.state.selectedOption === \"Male\"}\r\n                        onChange={this.updateGender} />\r\n                    Male\r\n                        </label>\r\n                <label>\r\n                    <input type=\"radio\" name=\"gender\"\r\n                        value=\"Female\"\r\n                        checked={this.state.selectedOption === \"Female\"}\r\n                        onChange={this.updateGender} />\r\n                    Female\r\n                        </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass NameForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: '' };\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({ value: event.target.value }, () => {\r\n            console.log(this.state.value);\r\n            userName = this.state.value;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <label>\r\n                Name:\r\n            <input required type=\"text\" value={this.state.value} onChange={this.handleSubmit} placeholder=\"Your good name here..\" />\r\n            </label>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <NameForm />,\r\n    document.getElementById('root')\r\n);\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        shown: true,\r\n    }\r\n    handleChange(event) {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n    toggleShown = (e) => {\r\n        this.setState({ shown: !this.state.shown });\r\n    }\r\n\r\n    updateColor = (e) => {\r\n        console.log(e.target.value);\r\n        this.setState({\r\n            color: e.target.value,\r\n        });\r\n        color = e.target.value;\r\n    }\r\n    render() {\r\n        const { shown } = this.state;\r\n        return (\r\n            <div>\r\n                {\r\n                    shown ? (\r\n                        < form onSubmit={(e) => this.toggleShown(e)} >\r\n                            <div>\r\n                                <img className=\"logo\" src={logo} alt=\"logo\" width=\"100px\" height=\"80px\" />;\r\n                                <h1>CARTOONIFY GAME FORM</h1>\r\n                            </div>\r\n                            <div className=\"main\">\r\n                                <div>\r\n                                    <NameForm />,\r\n                                </div>\r\n                                <div>\r\n                                    <GenderOptions />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"color\">Select your favorite Color</label>\r\n\r\n                                    <input type=\"color\"\r\n                                        value={this.state.value}\r\n                                        onChange={this.updateColor}\r\n                                        required\r\n                                    ></input>\r\n                                </div>\r\n                                <PlacesOptions />\r\n                                <input className=\"submit\" type=\"submit\"></input>\r\n                            </div>\r\n                        </form >\r\n                    ) : (\r\n                            <Output userName={userName} place={place} gender={gender} color={color} style={{}} />\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react'\r\nimport './Nav.css'\r\nimport Form from './Form';\r\nimport logo from '../images/logo.png';\r\n\r\nexport default class LetsPlay extends Component {\r\n  state = {\r\n    shown: true,\r\n  };\r\n\r\n  toggleShown = () => {\r\n    this.setState({ shown: !this.state.shown })\r\n  }\r\n  render() {\r\n    const { shown } = this.state;\r\n\r\n    return (\r\n      <div>\r\n\r\n        {\r\n          shown ? (\r\n            <div className=\"LetsPlay\">\r\n              <img src={logo} alt=\"logo\" width=\"100px\" height=\"80px\" />;\r\n\r\n              <h1 className=\"main-heading\"> Welcome To Cartoonify Game </h1>\r\n              <h3 className=\"sub-heading\">Let's play! Submit your answer to the following questions</h3>\r\n              <button className=\"play-game\"\r\n                onClick={this.toggleShown}>PLAY</button>\r\n            </div >\r\n          ) : (\r\n              <Form />\r\n            )\r\n        }\r\n      </div>\r\n    )\r\n  };\r\n}\r\n","import React from 'react';\r\nimport Nav from './components/Nav';\r\nimport './App.css';\r\nimport LetsPlay from './components/LetsPlay';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n      <LetsPlay />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}